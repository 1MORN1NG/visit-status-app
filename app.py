import streamlit as st
import pandas as pd
import io
import zipfile

st.title("üìä ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (Visit + Leave)")

# ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
master_file = st.file_uploader("1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Master (.xlsx)", type=["xlsx"])
leave_file = st.file_uploader("2. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Leave (.xlsx)", type=["xlsx"])
visit_files = st.file_uploader("3. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Visit (.csv) ‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå", type=["csv"], accept_multiple_files=True)

if master_file and leave_file and visit_files:
    if st.button("üîÅ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå"):
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..."):
            master_df = pd.read_excel(master_file)
            leave_df = pd.read_excel(leave_file)

            # ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå Visit
            visit_all = [pd.read_csv(f) for f in visit_files]
            visit_df = pd.concat(visit_all, ignore_index=True)
            st.write(\"Master ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\", master_df.head())
            st.write(\"Leave ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\", leave_df.head())
            st.write(\"Visit ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\", visit_df.head())

            # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            weeks = sorted(visit_df['Week'].unique())
            customer_list = master_df['Customer_code'].unique()
            cancelled_codes = visit_df[visit_df['VisitDetail'].str.contains("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", na=False)]['Customer_code'].unique()

            result = []
            for code in customer_list:
                for week in weeks:
                    visit_check = visit_df[(visit_df['Customer_code'] == code) & (visit_df['Week'] == week)]
                    leave_check = leave_df[(leave_df['Customer_code'] == code) & (leave_df['Week'] == week)]

                    if not visit_check.empty:
                        status = "‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡πÅ‡∏•‡πâ‡∏ß"
                    elif code in cancelled_codes:
                        status = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"
                    elif not leave_check.empty:
                        status = "‡∏•‡∏≤"
                    else:
                        status = "‡∏Ç‡∏≤‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°"

                    result.append({"Customer_code": code, "Week": week, "Status": status})

            status_df = pd.DataFrame(result)
            pivot_df = status_df.pivot(index="Customer_code", columns="Week", values="Status").reset_index()

            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô zip
            zip_buffer = io.BytesIO()
            with zipfile.ZipFile(zip_buffer, "a", zipfile.ZIP_DEFLATED) as zip_file:
                visit_bytes = io.BytesIO()
                visit_df.to_csv(visit_bytes, index=False)
                zip_file.writestr("visit_merged.csv", visit_bytes.getvalue())

                pivot_bytes = io.BytesIO()
                pivot_df.to_csv(pivot_bytes, index=False)
                zip_file.writestr("status_summary.csv", pivot_bytes.getvalue())

            zip_buffer.seek(0)
            st.success("‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
            st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (ZIP)", data=zip_buffer, file_name="visit_status_output.zip")
